name: Build

on:
  push:
    tags:
      - "v*.*.*"
      - "test-*"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8, 3.9, '3.10', '3.11']

    steps:
      - uses: actions/checkout@v3
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.14.1
        with:
          package-dir: .
          output-dir: dist
          config-file: "{package}/pyproject.toml"

      - uses: actions/upload-artifact@v3
        if: ${{ env.RELEASE_VERSION != ''}}
        with:
          name: ${{ env.RELEASE_VERSION }}-wheels
          retention-days: 15
          path: dist/*.whl
  
  build_sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          python setup.py sdist
      - uses: actions/upload-artifact@v2
        if: ${{ env.RELEASE_VERSION != ''}}
        with:
          name: ${{ env.RELEASE_VERSION }}-sdist
          retention-days: 15
          path: dist/*.tar.gz